{"version":3,"sources":["components/UserView/index.js","components/UserView/UserView.js","containers/modals/User/User.js","state-management/users/composedAsyncActions.js","components/ModalFooter/constants.js","components/ModalFooter/ModalFooter.js","components/ModalFooter/index.js","components/ModalHeader/ModalHeader.js","components/ModalHeader/index.js"],"names":["UserView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayName","user","email","photoURL","role","USER_ROLES","REGULAR","settings","DEFAULT_SETTINGS_JSON","photoFileToUpload","handlePhotoChange","bind","assertThisInitialized","handleRoleChange","handleSettingsChange","handleInputChange","prevProps","setState","onChange","objectSpread","event","defineProperty","target","name","value","handleUserChanged","currentDbUser","ADMIN","USER_MANAGER","photoFile","_ref","displayNameProps","emailProps","react_default","a","createElement","className","PhotoLoader","InputWithLabel","label","inputProps","getRoleOptions","map","index","key","Settings","React","Component","User","newUser","handleConfirm","handleUserChange","params","id","editUser","profileUpdates","newUserId","uuidv4","uploadProfilePicture","snapshot","metadata","ref","getDownloadURL","createUserFull","closeModal","_this$props","dbUser","ModalHeader","title","onClose","components_UserView","currentUser","ModalFooter","onCancel","onConfirm","disableConfirmButton","mapDispatchToProps","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_ref2","wrap","_context","prev","next","asyncActions","sent","abrupt","uid","stop","_x","apply","arguments","connect","_ref2$app","app","CANCEL","SAVE","ALIGNMENT","center","left","right","_ref$cancelCaption","cancelCaption","_ref$confirmCaption","confirmCaption","_ref$disableConfirmBu","_ref$contentAlignment","contentAlignment","concat","onClick","disabled","defaultProps","__webpack_require__","d","__webpack_exports__","ModalFooter_ModalFooter","index_es","icon","library","add","faTimes","ModalHeader_ModalHeader"],"mappings":"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","file":"static/js/2.c2b548e0.chunk.js","sourcesContent":["import UserView from './UserView';\n\nexport default UserView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserView.scss';\nimport { DEFAULT_SETTINGS_JSON } from '../../enums';\nimport { USER_ROLES } from '../../enums';\nimport InputWithLabel from \"../../components/InputWithLabel\";\nimport Settings from '../../components/Settings';\nimport PhotoLoader from '../../components/PhotoLoader';\n\nclass UserView extends React.Component {\n  static propTypes = {\n    currentUser: PropTypes.object.isRequired,\n    currentDbUser: PropTypes.object.isRequired,\n    user: PropTypes.object,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayName: props.user.displayName || '',\n      email: props.user.email || '',\n      photoURL: props.user.photoURL || '',\n      role: props.user.role || USER_ROLES.REGULAR,\n      settings: props.user.settings || DEFAULT_SETTINGS_JSON\n    };\n\n    this.photoFileToUpload = null;\n\n    this.handlePhotoChange = this.handlePhotoChange.bind(this);\n    this.handleRoleChange = this.handleRoleChange.bind(this);\n    this.handleSettingsChange = this.handleSettingsChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.user !== this.props.user) {\n      this.setState({\n        displayName: this.props.user.displayName || '',\n        email: this.props.user.email || '',\n        photoURL: this.props.user.photoURL || '',\n        role: this.props.user.role || '',\n        settings: this.props.user.settings || DEFAULT_SETTINGS_JSON\n      });\n    }\n  }\n\n  handleUserChanged() {\n    this.props.onChange({...this.state, ...{ photoFileToUpload: this.photoFileToUpload }});\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }, this.handleUserChanged);\n  }\n\n  getRoleOptions() {\n    switch(this.props.currentDbUser.role) {\n      case USER_ROLES.ADMIN:\n        return [\n          USER_ROLES.REGULAR,\n          USER_ROLES.USER_MANAGER,\n          USER_ROLES.ADMIN\n        ];\n      case USER_ROLES.USER_MANAGER:\n        return [\n          USER_ROLES.REGULAR,\n          USER_ROLES.USER_MANAGER\n        ];\n      default:\n        return [\n          USER_ROLES.REGULAR,\n          USER_ROLES.USER_MANAGER\n        ];\n    }\n  }\n\n  handlePhotoChange(photoFile) {\n    this.photoFileToUpload = photoFile;\n    this.handleUserChanged();\n  }\n\n  handleRoleChange({ target: { value } }) {\n    this.setState({ role: value }, this.handleUserChanged);\n  }\n\n  handleSettingsChange(settings) {\n    this.setState({ settings }, this.handleUserChanged);\n  }\n\n  render() {\n    const displayNameProps = { value: this.state.displayName, name:'displayName', onChange: this.handleInputChange };\n    const emailProps = { value: this.state.email, name:'email', onChange: this.handleInputChange };\n    return (\n      <div className='user-view'>\n        <PhotoLoader photoURL={this.state.photoURL} onChange={this.handlePhotoChange} />\n        <InputWithLabel label=\"Name\" inputProps={displayNameProps} />\n        <InputWithLabel label=\"Email\" inputProps={emailProps} />\n        <div className='role-wrapper'>\n          <label>Role</label>\n          <select onChange={this.handleRoleChange} value={this.state.role}>\n            {\n              this.getRoleOptions().map((role, index) => {\n                return <option key={index}>{role}</option>\n              })\n            }\n          </select>\n        </div>\n        <Settings settings={this.state.settings} onChange={this.handleSettingsChange}/>\n      </div>\n    );\n  }\n}\n\nexport default UserView;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ModalHeader from \"../../../components/ModalHeader\";\nimport ModalFooter from \"../../../components/ModalFooter\";\nimport { closeModal } from \"../../../state-management/app/actions\";\nimport UserView from \"../../../components/UserView\";\nimport { uuidv4 } from '../../../utils';\n// import {\n//   addUser,\n//   editUser\n// } from \"../../../state-management/users/asyncActions\";\nimport { createUserFull } from '../../../state-management/users/composedAsyncActions';\nimport { uploadProfilePicture } from '../../../state-management/app/asyncActions';\nimport \"./User.scss\";\n\nclass User extends React.Component {\n  static propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    user: PropTypes.object,\n    dbUser: PropTypes.object,\n    params: PropTypes.shape({\n      user: PropTypes.object.isRequired\n    }),\n    createUserFull: PropTypes.func.isRequired,\n    uploadProfilePicture: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newUser: null\n    };\n\n    this.handleConfirm = this.handleConfirm.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n  }\n\n  async handleConfirm() {\n    if (this.props.params.user.id) {\n      // edit\n      this.props.editUser();\n    } else {\n      // add\n      const profileUpdates = {\n        displayName: this.state.newUser.displayName,\n        email: this.state.newUser.email,\n        role: this.state.newUser.role,\n        settings: this.state.newUser.settings\n      };\n\n      if (this.state.newUser.photoFileToUpload) {\n        const newUserId = uuidv4();\n        const { snapshot } = await this.props.uploadProfilePicture(\n          newUserId,\n          this.state.newUser.photoFileToUpload\n        );\n  \n        if (snapshot) {\n          profileUpdates.photoURL = await snapshot.metadata.ref.getDownloadURL();\n        }\n      }\n\n      this.props.createUserFull(profileUpdates.email, profileUpdates.displayName, profileUpdates.photoURL || '', profileUpdates.role, profileUpdates.settings);\n    }\n    this.props.closeModal();\n  }\n\n  handleUserChange(newUser) {\n    this.setState({ newUser: {...newUser} });\n  }\n\n  disableConfirmButton() {\n    return !this.state.newUser || !this.state.newUser.displayName || !this.state.newUser.email || !this.state.newUser.role || !this.state.newUser.settings;\n  }\n\n  render() {\n    const { user, dbUser, params, closeModal } = this.props;\n    return (\n      <div className=\"user\">\n        <ModalHeader title=\"Add/edit user\" onClose={closeModal} />\n        <div className=\"user-modal-body\">\n          <UserView\n            onChange={this.handleUserChange}\n            currentUser={user}\n            currentDbUser={dbUser}\n            user={params.user}\n          />\n        </div>\n        <ModalFooter\n          onCancel={closeModal}\n          onConfirm={this.handleConfirm}\n          disableConfirmButton={this.disableConfirmButton()}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ app: { user, dbUser } }) {\n  return {\n    user,\n    dbUser\n  };\n}\n\nconst mapDispatchToProps = {\n  closeModal,\n  createUserFull,\n  uploadProfilePicture\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User);\n","import * as asyncActions from './asyncActions';\n\n\nexport function createUserFull(email, displayName, photoURL, role, settings) {\n  return async(dispatch) => {\n    const { user } = await dispatch(asyncActions.createUser(displayName, email, photoURL));\n    return dispatch(asyncActions.createDbUser(user.uid, role, settings));\n  };\n}","export const CANCEL = 'Cancel';\nexport const SAVE = 'Save';\nexport const ALIGNMENT = {\n  center: 'center',\n  left: 'left',\n  right: 'right'\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SAVE, CANCEL, ALIGNMENT } from './constants';\nimport './ModalFooter.scss';\n\nexport default function ModalFooter({ onCancel, onConfirm, cancelCaption = CANCEL, confirmCaption = SAVE, disableConfirmButton = false, contentAlignment = ALIGNMENT.right }) {\n  return (\n    <footer className={`modal-footer ${contentAlignment}`}>\n      <button\n        className='cancel'\n        onClick={onCancel}\n      > {cancelCaption}\n      </button>\n      <button\n        className='confirm'\n        onClick={onConfirm}\n        disabled={disableConfirmButton}\n      >{confirmCaption}\n      </button>\n    </footer>\n  );\n}\n\nModalFooter.propTypes = {\n  disableConfirmButton: PropTypes.bool,\n  cancelCaption: PropTypes.string,\n  confirmCaption: PropTypes.string,\n  contentAlignment: PropTypes.oneOf([ALIGNMENT.left, ALIGNMENT.right, ALIGNMENT.center]).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired\n};\n\nModalFooter.defaultProps = {\n  contentAlignment: ALIGNMENT.right\n};","export { default } from './ModalFooter';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport './ModalHeader.scss';\n\nlibrary.add(faTimes);\n\nexport default function ModalHeader({ title, onClose }) {\n  return (\n    <header className='modal-header'>\n      <h2 className=\"title\">{title}</h2>\n      {onClose && (\n        <FontAwesomeIcon\n          className=\"close-button\"\n          icon=\"times\"\n          onClick={onClose}\n        />\n      )}\n    </header>\n  );\n}\n\nModalHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClose: PropTypes.func\n};","export { default } from './ModalHeader';"],"sourceRoot":""}